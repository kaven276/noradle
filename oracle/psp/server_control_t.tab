create table SERVER_CONTROL_T
(
  cfg_id       VARCHAR2(15) default 'default' not null,
  gw_host      VARCHAR2(99),
  gw_port      NUMBER(5),
  min_servers  NUMBER(4),
  max_servers  NUMBER(4),
  max_requests NUMBER(9),
  max_lifetime INTERVAL DAY(4) TO SECOND(0),
  idle_timeout NUMBER(8),
  disabled     VARCHAR2(1)
)
;
comment on column SERVER_CONTROL_T.cfg_id
  is 'different config can connect to different nodeJS gateway';
comment on column SERVER_CONTROL_T.gw_host
  is 'host of nodeJS gateway that listen for oracle to connect';
comment on column SERVER_CONTROL_T.gw_port
  is 'port of nodeJS gateway that listen for oracle to connect';
comment on column SERVER_CONTROL_T.min_servers
  is 'minimun servers to keep, it''s also the starting servers';
comment on column SERVER_CONTROL_T.max_servers
  is 'maximum servers in parallel';
comment on column SERVER_CONTROL_T.max_requests
  is 'when the number of request a server process reach this limit, the server should/will quit';
comment on column SERVER_CONTROL_T.max_lifetime
  is 'when the minutes of a server''s life time reach this limit, the server should/will quit';
comment on column SERVER_CONTROL_T.idle_timeout
  is 'maximum idle seconds to wait for disconnect and reconnect';
comment on column SERVER_CONTROL_T.disabled
  is 'none null or N indicate cfg is disabled, pmon will not start server process';
alter table SERVER_CONTROL_T
  add constraint PK_SVR_CFG primary key (CFG_ID);

